<controls:MetroWindow x:Class="FindRomCover.MainWindow"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                      xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
                      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                      xmlns:local="clr-namespace:FindRomCover"
                      mc:Ignorable="d"
                      d:DataContext="{d:DesignInstance Type=local:MainWindow, IsDesignTimeCreatable=True}"
                      Title="Find ROM Cover"
                      MinWidth="900"
                      MinHeight="600">

    <Window.Resources>
        <local:ObjectToBoolConverter x:Key="IsNotNullConverter" />

        <!-- Style for the main action button with hover effects -->
        <Style x:Key="AccentOnHoverButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Gray8}" />
            <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Gray5}" />
            <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Text}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Padding" Value="10,5" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="ButtonBorder"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="3"
                                RenderTransformOrigin="0.5,0.5">
                            <Border.RenderTransform>
                                <ScaleTransform ScaleX="1.0" ScaleY="1.0" />
                            </Border.RenderTransform>
                            <Border.Effect>
                                <DropShadowEffect Color="{DynamicResource MahApps.Colors.Gray5}" Direction="315" ShadowDepth="2" Opacity="0.3" BlurRadius="4" />
                            </Border.Effect>
                            <ContentPresenter x:Name="ButtonContentPresenter"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              Margin="{TemplateBinding Padding}"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="ButtonBorder" Property="Background" Value="{DynamicResource MahApps.Brushes.Accent4}" />
                                <Setter TargetName="ButtonBorder" Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Accent}" />
                                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.IdealForeground}" />
                                <Setter TargetName="ButtonBorder" Property="Effect">
                                    <Setter.Value>
                                        <DropShadowEffect Color="{DynamicResource MahApps.Colors.Accent}" Direction="315" ShadowDepth="4" Opacity="0.6" BlurRadius="8" />
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="ButtonBorder" Property="RenderTransform">
                                    <Setter.Value>
                                        <ScaleTransform ScaleX="1.03" ScaleY="1.03" />
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="ButtonBorder" Property="Background" Value="{DynamicResource MahApps.Brushes.Accent}" />
                                <Setter TargetName="ButtonBorder" Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Accent}" />
                                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.IdealForeground}" />
                                <Setter TargetName="ButtonBorder" Property="Effect">
                                    <Setter.Value>
                                        <DropShadowEffect Color="Black" Direction="315" ShadowDepth="1" Opacity="0.7" BlurRadius="2" />
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="ButtonContentPresenter" Property="RenderTransform">
                                    <Setter.Value>
                                        <TranslateTransform X="1" Y="1" />
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="ButtonBorder" Property="Background" Value="{DynamicResource MahApps.Brushes.Gray7}" />
                                <Setter TargetName="ButtonBorder" Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Gray5}" />
                                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Gray3}" />
                                <Setter TargetName="ButtonBorder" Property="Effect" Value="{x:Null}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <DataTemplate x:Key="ImageCellTemplate">
            <Border
                Margin="10"
                Padding="5"
                BorderBrush="{DynamicResource MahApps.Brushes.Gray7}"
                BorderThickness="1"
                Background="{DynamicResource MahApps.Brushes.Gray9}"
                MouseDown="ImageCell_MouseDown"
                ContextMenuOpening="Image_ContextMenuOpening"
                Cursor="Hand">
                <Border.Effect>
                    <DropShadowEffect ShadowDepth="4" Direction="315" Color="Black" Opacity="0.5" BlurRadius="5"/>
                </Border.Effect>
                <Border.Style>
                    <Style TargetType="Border">
                        <Setter Property="RenderTransform">
                            <Setter.Value>
                                <ScaleTransform ScaleX="1.0" ScaleY="1.0" />
                            </Setter.Value>
                        </Setter>
                        <Setter Property="RenderTransformOrigin" Value="0.5, 0.5" />
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="RenderTransform">
                                    <Setter.Value>
                                        <ScaleTransform ScaleX="1.02" ScaleY="1.02" />
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Effect">
                                    <Setter.Value>
                                        <DropShadowEffect ShadowDepth="8" Direction="315" Color="Black" Opacity="0.6" BlurRadius="10"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
                <StackPanel>
                    <Image
                        Width="{Binding Path=ImageWidth, RelativeSource={RelativeSource AncestorType=Window}}"
                        Height="{Binding Path=ImageHeight, RelativeSource={RelativeSource AncestorType=Window}}"
                        Source="{Binding ImageSource}" d:DataContext="{d:DesignInstance }">
                        <Image.Style>
                            <Style TargetType="Image">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ImageSource}" Value="{x:Null}">
                                        <Setter Property="Source" Value="{Binding ImagePath}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>
                    <TextBlock HorizontalAlignment="Center" Text="{Binding ImageName}" FontWeight="Bold"
                               Margin="0,5,0,0" TextTrimming="CharacterEllipsis" ToolTip="{Binding ImageName}"
                               d:DataContext="{d:DesignInstance }" />
                    <TextBlock HorizontalAlignment="Center"
                               Text="{Binding SimilarityScore, StringFormat={}{0:F2}%}" FontWeight="Bold"
                               d:DataContext="{d:DesignInstance }" />
                </StackPanel>
            </Border>
        </DataTemplate>
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <Menu Grid.Row="0" Name="MainMenu">
            <!-- Menu Items remain the same, but placed here for context -->
            <MenuItem x:Name="MenuSimilarityAlgorithms" Header="Set Similarity Algorithm">
                <MenuItem x:Name="MenuAlgorithmJaccard" Click="SetSimilarityAlgorithm_Click"
                          Header="Jaccard Similarity" IsCheckable="True" />
                <MenuItem x:Name="MenuAlgorithmJaroWinkler" Click="SetSimilarityAlgorithm_Click"
                          Header="Jaro-Winkler Distance" IsCheckable="True" />
                <MenuItem x:Name="MenuAlgorithmLevenshtein" Click="SetSimilarityAlgorithm_Click"
                          Header="Levenshtein Distance" IsCheckable="True" />
            </MenuItem>
            <MenuItem x:Name="MySimilarityMenu" Header="Set Similarity Threshold">
                <MenuItem x:Name="Menu10" Click="SetSimilarityThreshold_Click" Header="10%" IsCheckable="True" />
                <MenuItem x:Name="Menu20" Click="SetSimilarityThreshold_Click" Header="20%" IsCheckable="True" />
                <MenuItem x:Name="Menu30" Click="SetSimilarityThreshold_Click" Header="30%" IsCheckable="True" />
                <MenuItem x:Name="Menu40" Click="SetSimilarityThreshold_Click" Header="40%" IsCheckable="True" />
                <MenuItem x:Name="Menu50" Click="SetSimilarityThreshold_Click" Header="50%" IsCheckable="True" />
                <MenuItem x:Name="Menu60" Click="SetSimilarityThreshold_Click" Header="60%" IsCheckable="True" />
                <MenuItem x:Name="Menu70" Click="SetSimilarityThreshold_Click" Header="70%" IsCheckable="True" />
                <MenuItem x:Name="Menu80" Click="SetSimilarityThreshold_Click" Header="80%" IsCheckable="True" />
                <MenuItem x:Name="Menu90" Click="SetSimilarityThreshold_Click" Header="90%" IsCheckable="True" />
            </MenuItem>
            <MenuItem x:Name="ImageSizeMenu" Header="Set Thumbnail Size">
                <MenuItem x:Name="Thumbnail100" Click="SetThumbnailSize_Click" Header="100 pixels" IsCheckable="True" />
                <MenuItem x:Name="Thumbnail150" Click="SetThumbnailSize_Click" Header="150 pixels" IsCheckable="True" />
                <MenuItem x:Name="Thumbnail200" Click="SetThumbnailSize_Click" Header="200 pixels" IsCheckable="True" />
                <MenuItem x:Name="Thumbnail300" Click="SetThumbnailSize_Click" Header="300 pixels" IsCheckable="True" />
                <MenuItem x:Name="Thumbnail350" Click="SetThumbnailSize_Click" Header="350 pixels" IsCheckable="True" />
                <MenuItem x:Name="Thumbnail400" Click="SetThumbnailSize_Click" Header="400 pixels" IsCheckable="True" />
                <MenuItem x:Name="Thumbnail450" Click="SetThumbnailSize_Click" Header="450 pixels" IsCheckable="True" />
                <MenuItem x:Name="Thumbnail500" Click="SetThumbnailSize_Click" Header="500 pixels" IsCheckable="True" />
            </MenuItem>
            <MenuItem Header="Settings">
                <MenuItem Click="EditExtensions_Click" Header="Edit Supported Extensions...">
                    <MenuItem.Icon>
                        <Image Source="pack://application:,,,/images/settings.png" Width="16" Height="16" />
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
            <MenuItem Header="Theme">
                <MenuItem Header="Base Theme">
                    <MenuItem.Icon>
                        <Image Source="pack://application:,,,/images/theme.png" Width="16" Height="16" />
                    </MenuItem.Icon>
                    <MenuItem x:Name="LightTheme" Header="Light" Click="ChangeBaseTheme_Click" IsCheckable="True" />
                    <MenuItem x:Name="DarkTheme" Header="Dark" Click="ChangeBaseTheme_Click" IsCheckable="True" />
                </MenuItem>
                <MenuItem x:Name="MenuAccentColors" Header="Accent Colors">
                    <MenuItem.Icon>
                        <Image Source="pack://application:,,,/images/theme.png" Width="16" Height="16" />
                    </MenuItem.Icon>
                    <MenuItem x:Name="RedAccent" Header="Red" Click="ChangeAccentColor_Click" IsCheckable="True" />
                    <MenuItem x:Name="GreenAccent" Header="Green" Click="ChangeAccentColor_Click" IsCheckable="True" />
                    <MenuItem x:Name="BlueAccent" Header="Blue" Click="ChangeAccentColor_Click" IsCheckable="True" />
                    <MenuItem x:Name="PurpleAccent" Header="Purple" Click="ChangeAccentColor_Click" IsCheckable="True" />
                    <MenuItem x:Name="OrangeAccent" Header="Orange" Click="ChangeAccentColor_Click" IsCheckable="True" />
                    <MenuItem x:Name="LimeAccent" Header="Lime" Click="ChangeAccentColor_Click" IsCheckable="True" />
                    <MenuItem x:Name="EmeraldAccent" Header="Emerald" Click="ChangeAccentColor_Click"
                              IsCheckable="True" />
                    <MenuItem x:Name="TealAccent" Header="Teal" Click="ChangeAccentColor_Click" IsCheckable="True" />
                    <MenuItem x:Name="CyanAccent" Header="Cyan" Click="ChangeAccentColor_Click" IsCheckable="True" />
                    <MenuItem x:Name="CobaltAccent" Header="Cobalt" Click="ChangeAccentColor_Click" IsCheckable="True" />
                    <MenuItem x:Name="IndigoAccent" Header="Indigo" Click="ChangeAccentColor_Click" IsCheckable="True" />
                    <MenuItem x:Name="VioletAccent" Header="Violet" Click="ChangeAccentColor_Click" IsCheckable="True" />
                    <MenuItem x:Name="PinkAccent" Header="Pink" Click="ChangeAccentColor_Click" IsCheckable="True" />
                    <MenuItem x:Name="MagentaAccent" Header="Magenta" Click="ChangeAccentColor_Click"
                              IsCheckable="True" />
                    <MenuItem x:Name="CrimsonAccent" Header="Crimson" Click="ChangeAccentColor_Click"
                              IsCheckable="True" />
                    <MenuItem x:Name="AmberAccent" Header="Amber" Click="ChangeAccentColor_Click" IsCheckable="True" />
                    <MenuItem x:Name="YellowAccent" Header="Yellow" Click="ChangeAccentColor_Click" IsCheckable="True" />
                    <MenuItem x:Name="BrownAccent" Header="Brown" Click="ChangeAccentColor_Click" IsCheckable="True" />
                    <MenuItem x:Name="OliveAccent" Header="Olive" Click="ChangeAccentColor_Click" IsCheckable="True" />
                    <MenuItem x:Name="SteelAccent" Header="Steel" Click="ChangeAccentColor_Click" IsCheckable="True" />
                    <MenuItem x:Name="MauveAccent" Header="Mauve" Click="ChangeAccentColor_Click" IsCheckable="True" />
                    <MenuItem x:Name="TaupeAccent" Header="Taupe" Click="ChangeAccentColor_Click" IsCheckable="True" />
                    <MenuItem x:Name="SiennaAccent" Header="Sienna" Click="ChangeAccentColor_Click" IsCheckable="True" />
                </MenuItem>
            </MenuItem>
            <MenuItem Header="Donate">
                <MenuItem Click="DonateButton_Click" Header="Donate">
                    <MenuItem.Icon>
                        <Image Source="pack://application:,,,/images/donate.png" Width="16" Height="16" />
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
            <MenuItem Header="About">
                <MenuItem Click="About_Click" Header="About">
                    <MenuItem.Icon>
                        <Image Source="pack://application:,,,/images/about.png" Width="16" Height="16" />
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
            <MenuItem Header="Exit">
                <MenuItem Click="Exit_Click" Header="Exit">
                    <MenuItem.Icon>
                        <Image Source="pack://application:,,,/images/exit.png" Width="16" Height="16" />
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
        </Menu>

        <Grid Grid.Row="1" Margin="10">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="400" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <!-- LEFT COLUMN -->
            <Grid Grid.Column="0" Margin="0,0,10,0">


                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>

                <!-- Step 1: Input Folders -->
                <GroupBox Grid.Row="0" Header="Select Folders" Margin="0,0,0,10">
                    <StackPanel Margin="5">
                        <Grid Margin="0,5,0,5">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" /><ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <TextBox x:Name="TxtRomFolder" Grid.Column="0"
                                     controls:TextBoxHelper.Watermark="Path to your ROM folder..." />
                            <Button Grid.Column="1" Content="Browse..." Margin="5,0,0,0"
                                    Click="BtnBrowseRomFolder_Click" />
                        </Grid>
                        <Grid Margin="0,5,0,5">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" /><ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <TextBox x:Name="TxtImageFolder" Grid.Column="0"
                                     controls:TextBoxHelper.Watermark="Path to your image folder..." 
                                     TextChanged="TxtImageFolder_TextChanged" />
                            <Button Grid.Column="1" Content="Browse..." Margin="5,0,0,0"
                                    Click="BtnBrowseImageFolder_Click" />
                        </Grid>
                    </StackPanel>
                </GroupBox>

                <!-- Step 2: Missing Covers -->
                <GroupBox Grid.Row="1" Margin="0,0,0,10">
                    <GroupBox.Header>
<StackPanel Orientation="Horizontal">
    <Label x:Name="LabelMissingRoms" Content="LIST OF MISSING COVERS" Padding="0,0,5,0" 
           Foreground="{DynamicResource MahApps.Brushes.IdealForeground}" />
</StackPanel>
                    </GroupBox.Header>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Button Grid.Row="0" Content="Check for Missing Images" Click="BtnCheckForMissingImages_Click"
                                Margin="5" Style="{StaticResource AccentOnHoverButtonStyle}" />

                        <Grid Grid.Row="1">
                            <ScrollViewer VerticalScrollBarVisibility="Auto">
                                <ListBox x:Name="LstMissingImages" SelectionChanged="LstMissingImages_SelectionChanged"
                                         BorderThickness="0" />
                            </ScrollViewer>
                            <controls:ProgressRing IsActive="{Binding IsCheckingMissing}" HorizontalAlignment="Center"
                                                   VerticalAlignment="Center" />
                        </Grid>

                        <Button Grid.Row="2" x:Name="BtnRemoveSelectedItem" Content="Remove Selected Item from List"
                                Click="BtnRemoveSelectedItem_Click" Margin="5"
                                IsEnabled="{Binding ElementName=LstMissingImages, Path=SelectedItem, Converter={StaticResource IsNotNullConverter}}" />
                    </Grid>
                </GroupBox>
            </Grid>

            <!-- RIGHT COLUMN -->
            <GroupBox Grid.Column="1" Header="Image Suggestions">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>

                    <Label x:Name="LblSearchQuery" Grid.Row="0" Margin="5,0,5,5" />

                    <Grid Grid.Row="1">
                        <!-- Image Display -->
                        <ScrollViewer x:Name="ImageScrollViewer" VerticalScrollBarVisibility="Auto">
                            <ItemsControl ItemsSource="{Binding SimilarImages}">
                                <ItemsControl.ItemTemplate>
                                    <StaticResource ResourceKey="ImageCellTemplate" />
                                </ItemsControl.ItemTemplate>
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <WrapPanel />
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                            </ItemsControl>
                        </ScrollViewer>

                        <!-- Loading Indicator -->
                        <controls:ProgressRing IsActive="{Binding IsFindingSimilar}" HorizontalAlignment="Center"
                                               VerticalAlignment="Center" />

                        <!-- Empty State Message -->
                        <TextBlock Text="Select a missing cover from the list to see suggestions."
                                   HorizontalAlignment="Center" VerticalAlignment="Center"
                                   Foreground="{DynamicResource MahApps.Brushes.Gray5}"
                                   Visibility="Collapsed">
                            <TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition
                                                    Binding="{Binding ElementName=ImageScrollViewer, Path=DataContext.SimilarImages.Count}"
                                                    Value="0" />
                                                <Condition Binding="{Binding IsFindingSimilar}" Value="False" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Visibility" Value="Visible" />
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </Grid>
                </Grid>
            </GroupBox>
        </Grid>
    </Grid>
</controls:MetroWindow>

